@inherits LayoutComponentBase
@using Blazored.SessionStorage
@inject NavigationManager nav
@inject ISessionStorageService sessionStorage
@using BlazorApp1.Client.AuthProviders
@inject AuthenticationStateProvider _stateProvider;
@using Blazored.Toast.Configuration

<BlazoredToasts Position="Blazored.Toast.Configuration.ToastPosition.TopRight"
                IconType="IconType.Material"
                SuccessClass="success-toast-override"
                ShowProgressBar="true"
                RemoveToastsOnNavigation="true"
                Timeout="3" />

<AuthorizeView>
    <Authorized>
        <div class="page">
            <div class="sidebar">
                <UserNav />
            </div>

            <main>
                <div class="top-row px-4">
                    <span>Welcome  &nbsp;</span> <span style="color:brown; font-size:16px;"> @userNameH</span>
                    &nbsp;
                    <a href="#" @onclick="Logout">Logout</a>
                </div>

                <article class="content px-4">
                    @Body
                </article>
            </main>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string userName = string.Empty;
    private string userNameH = string.Empty;
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (!user.Identity.IsAuthenticated)
        {
            nav.NavigateTo($"account/login");
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            userName = await sessionStorage.GetItemAsStringAsync("UserName");
            userNameH = await sessionStorage.GetItemAsStringAsync("UserNameH");

            StateHasChanged();
        }
    }
    private async Task Logout()
    {
        //userName = null;
        await sessionStorage.RemoveItemAsync("UserName");
        ((TestAuthStateProvider)_stateProvider).MarkUserAsLoggedOut();
        nav.NavigateTo("/");
    }
}
